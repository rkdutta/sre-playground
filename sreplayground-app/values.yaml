# Default values for sreplayground.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  components:
  - name: opentelemetry-demo
    rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: sreplayground-app-frontendproxy
              port: 
                number: 8080
      host: "demo.sre-playground.devops.nakednerds.net"
    - http:
        paths:
        - backend:
            service:
              name: sreplayground-app-otelcol
              port:
                number: 4318
          path: /v1/traces
          pathType: Prefix
      host: "otel.sre-playground.devops.nakednerds.net"
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: sreplayground-app-dark-index-page
              port: 
                number: 8080
      host: "sre-playground.devops.nakednerds.net"
cni:
  kindnet:
    enabled: false
  cilium: 
    enabled: true
cilium:
  image:
    digest: sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68
    tag: v1.13.0
  bpf:
    masquerade: true
  hubble:
    enabled: false
    metrics:
      enabled:
      - dns
      - drop
      - tcp
      - flow
      - port-distribution
      - icmp
      - http
    relay:
      enabled: false
    tls:
      auto:
        enabled: false
        method: helm
    ui:
      enabled: false
      ingress:
        class: nginx
        enabled: false
        hosts:
          - hubble.sreplayground.local
  ipMasqAgent:
    enabled: true
  ipam:
    mode: kubernetes
  k8sServiceHost: sre-demo-site-control-plane
  k8sServicePort: 6443
  kubeProxyReplacement: strict
  operator:
  # -- Enable prometheus metrics for cilium-operator on the configured port at /metrics
    prometheus:
      enabled: true
  # -- Enable prometheus metrics for cilium-operator on the configured port at /metrics
  prometheus:
    enabled: true
  # -- Cilium Ingress is disabled using nginx ingress controller. Cilium ingress controller 
  #    is no compatible with kind clusters
  ingressController:
    enabled: false
    loadbalancerMode: shared
metallb:
  enabled: true
  IPAddressPool: first-pool
  addresspool: 172.21.255.200-172.21.255.250
  controller:
    image:
      tag: "v0.13.9"
  speaker:
    image:
      tag: "v0.13.9"
loki-stack:
  loki:
    enabled: true
    isDefault: true
    url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
    image:
      tag: "2.6.1"
  prometheus:
    enabled: false
  filebeat:
    enabled: false
  logstash:
    enabled: false
  promtail:
    enabled: false
  fluent-bit:
    enabled: false
  grafana:
    enabled: false
fluent-bit:
  enabled: true
  logLevel: info
  metricsPort: 2020
  flush: 1
  image:
    tag: "2.0.9"
  config:
    customParsers: |
      [PARSER]
          Name docker_no_time
          Format json
          Time_Keep Off
          Time_Key time
          Time_Format %Y-%m-%dT%H:%M:%S.%L
    extraFiles: 
      labelmap.json: |-
        {
          "kubernetes": {
            "container_name": "container",
            "host": "node",
            "labels": {
              "app": "app",
              "app.kubernetes.io/name": "job"
            },
            "namespace_name": "namespace",
            "pod_name": "instance"
          },
          "stream": "stream"
        }
    filters: |
      [FILTER]
          Name kubernetes
          Match kube.*
          Kube_URL https://kubernetes.default.svc:443
          Merge_Log On
          Keep_Log On
          K8S-Logging.Parser On
          K8S-Logging.Exclude On
    inputs: |
      [INPUT]
          Name tail
          Path /var/log/containers/*.log
          multiline.parser docker, cri
          Tag kube.*
          Mem_Buf_Limit 5MB
          Skip_Long_Lines On
      [INPUT]
          Name systemd
          Tag host.*
          Systemd_Filter _SYSTEMD_UNIT=kubelet.service
          Read_From_Tail On
    outputs: |
      [Output]
          Name loki
          host sreplayground-loki.default
          port 3100
          http_user admin
          http_passwd admin
          Match kube.*
          labels job=kubernetes
          label_map_path /fluent-bit/etc/labelmap.json
          remove_keys kubernetes,stream
    service: |
      [SERVICE]
          Daemon Off
          Flush {{ .Values.flush }}
          Log_Level {{ .Values.logLevel }}
          Parsers_File custom_parsers.conf
          HTTP_Server On
          HTTP_Listen 0.0.0.0
          HTTP_Port {{ .Values.metricsPort }}
          Health_Check On
    upstream: {}
  tolerations:
  - key: node-role.kubernetes.io/control-plane
    operator: "Exists"
prometheus-stack:
  enabled: false
  alertmanager:
    alertmanagerSpec:
      image:
        tag: v0.25.0
  grafana:
    image:
      tag: "9.3.6"
    adminPassword: admin
    adminUser: admin
    additionalDataSources:
        - editable: false
          isDefault: false
          name: Jaeger
          type: jaeger
          uid: webstore-traces
          url: http://sreplayground-app-jaeger-query.default.svc:16686/jaeger/ui
        - name: Loki
          editable: false
          type: loki
          access: proxy
          url: "http://sreplayground-loki.default.svc:3100"
          version: 1
          isDefault: false
          jsonData:
            derivedFields:
            - datasourceUid: Jaeger
              matcherRegex: "trace_id=(\\w+)"
              name: TraceID
              url: "$${__value.raw}"
  nodeExporter:
    enabled: true
  prometheus:
    image:
      tag: "v2.42.0"
    prometheusSpec:
      additionalScrapeConfigs:
      - job_name: opentelemetry-community-demo
        static_configs:
        - targets:
          - 'sreplayground-app-otelcol.default.svc:9464'
  kube-state-metrics:
    image:
      tag: "v2.8.0"
  prometheusOperator:
    image:
      tag: "v0.63.0"
opentelemetry-demo:
  enabled: true
  default:
    image:
      tag: "1.3.0"
  components:
    accountingService:
      enabled: true
    adService:
      enabled: true
    cartService:
      enabled: true
    checkoutService:
      enabled: true
    currencyService:
      enabled: true
    emailService:
      enabled: true
    featureflagService:
      enabled: true
    ffsPostgres:
      enabled: true
    frauddetectionService:
      enabled: true
    frontend:
      enabled: true
      env:
      - name: FRONTEND_ADDR
        value: :8080
      - name: AD_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-adservice:8080'
      - name: CART_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-cartservice:8080'
      - name: CHECKOUT_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-checkoutservice:8080'
      - name: CURRENCY_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-currencyservice:8080'
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-productcatalogservice:8080'
      - name: RECOMMENDATION_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-recommendationservice:8080'
      - name: SHIPPING_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-shippingservice:8080'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4317
      - name: WEB_OTEL_SERVICE_NAME
        value: frontend-web
      - name: FRONTEND_PORT
        value: "8080"
      - name: PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
        value: http://otel.sre-playground.devops.nakednerds.net/v1/traces
    frontendProxy:
      enabled: true
    kafka:
      enabled: true
    loadgenerator:
      enabled: true 
    paymentService:
      enabled: true
    productCatalogService:
      enabled: true
    quoteService:
      enabled: true
    recommendationService:
      enabled: true
    redis:
      enabled: true
    shippingService:
      enabled: true
  observability:
    grafana:
      enabled: false # The demo is using another grafana instance from prometheus community
    jaeger:
      enabled: true
    otelcol:
      enabled: true
    prometheus:
      enabled: false # The demo is using another prometheus instance from prometheus community
  opentelemetry-collector:
    config:
      service:
        pipelines:
          metrics:
            exporters:
              - prometheus
          traces:
            exporters:
              - otlp