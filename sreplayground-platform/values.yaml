# Default values for sreplayground.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

ingress-nginx:
  enabled: true
  controller:
    image:
      tag: "v1.6.4"
ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  components:
  - name: jaeger-query
    rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: sreplayground-platform-jaeger-query
              port: 
                name: http-query
      host: "jaeger.sre-playground.devops.nakednerds.net"
  - name: prometheus
    rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: sreplayground-platform-kub-prometheus
              port: 
                number: 9090
      host: "prometheus.sre-playground.devops.nakednerds.net"
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: sreplayground-platform-grafana
              port: 
                number: 80
      host: "grafana.sre-playground.devops.nakednerds.net"

loki-stack:
  loki:
    enabled: true
    isDefault: false
    url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
    image:
      tag: "2.6.1"
  prometheus:
    enabled: false
  filebeat:
    enabled: false
  logstash:
    enabled: false
  promtail:
    enabled: false
  fluent-bit:
    enabled: false
  grafana:
    enabled: false

fluent-bit:
  enabled: true
  logLevel: info
  metricsPort: 2020
  flush: 1
  image:
    tag: "2.0.9"
  config:
    customParsers: |
      [PARSER]
          Name docker_no_time
          Format json
          Time_Keep Off
          Time_Key time
          Time_Format %Y-%m-%dT%H:%M:%S.%L
    extraFiles: 
      labelmap.json: |-
        {
          "kubernetes": {
            "container_name": "container",
            "host": "node",
            "labels": {
              "app": "app",
              "app.kubernetes.io/name": "job"
            },
            "namespace_name": "namespace",
            "pod_name": "instance"
          },
          "stream": "stream"
        }
    filters: |
      [FILTER]
          Name kubernetes
          Match kube.*
          Kube_URL https://kubernetes.default.svc:443
          Merge_Log On
          Keep_Log On
          K8S-Logging.Parser On
          K8S-Logging.Exclude On
    inputs: |
      [INPUT]
          Name tail
          Path /var/log/containers/*.log
          multiline.parser docker, cri
          Tag kube.*
          Mem_Buf_Limit 5MB
          Skip_Long_Lines On
      [INPUT]
          Name systemd
          Tag host.*
          Systemd_Filter _SYSTEMD_UNIT=kubelet.service
          Read_From_Tail On
    outputs: |
      [Output]
          Name loki
          host {{ .Release.Name }}-loki
          port 3100
          http_user admin
          http_passwd admin
          Match kube.*
          labels job=kubernetes
          label_map_path /fluent-bit/etc/labelmap.json
          remove_keys kubernetes,stream
    service: |
      [SERVICE]
          Daemon Off
          Flush {{ .Values.flush }}
          Log_Level {{ .Values.logLevel }}
          Parsers_File custom_parsers.conf
          HTTP_Server On
          HTTP_Listen 0.0.0.0
          HTTP_Port {{ .Values.metricsPort }}
          Health_Check On
    upstream: {}
  tolerations:
  - key: node-role.kubernetes.io/control-plane
    operator: "Exists"
  
  
  # grafana:
  #   image:
  #     tag: "9.3.6"
  #   adminPassword: admin-operator
  #   adminUser: admin
  #   additionalDataSources:
  #   - editable: false
  #     isDefault: false
  #     name: Jaeger
  #     type: jaeger
  #     uid: webstore-traces
  #     url: http://sreplayground-platform-jaeger-query.default.svc:16686/jaeger/ui
  #   - access: proxy
  #     editable: false
  #     isDefault: false
  #     jsonData:
  #       derivedFields:
  #       - datasourceUid: Jaeger
  #         matcherRegex: trace_id=(\w+)
  #         name: TraceID
  #         url: $${__value.raw}
  #     name: Loki
  #     type: loki
  #     url: http://sreplayground-platform-loki.default.svc:3100
  #     version: 1

# sadasdsad:
#   alertmanager:
#     alertmanagerSpec:
#       image:
#         tag: v0.25.0
#   grafana:
#     image:
#       tag: "9.3.6"
#     adminPassword: admin
#     adminUser: admin
#     additionalDataSources:
#         - editable: false
#           isDefault: false
#           name: Jaeger
#           type: jaeger
#           uid: webstore-traces
#           url: http://sreplayground-platform-jaeger-query.default.svc:16686/jaeger/ui
#         - name: Loki
#           editable: false
#           type: loki
#           access: proxy
#           url: "http://sreplayground-platform-loki.default.svc:3100"
#           version: 1
#           isDefault: false
#           jsonData:
#             derivedFields:
#             - datasourceUid: Jaeger
#               matcherRegex: "trace_id=(\\w+)"
#               name: TraceID
#               url: "$${__value.raw}"
#   nodeExporter:
#     enabled: true
#   prometheus:
#     image:
#       tag: "v2.42.0"
#     prometheusSpec:
#       additionalScrapeConfigs:
#       - job_name: opentelemetry-community-demo
#         static_configs:
#         - targets:
#           - 'app-hipster-shop-otelcol.default.svc:9464'
#   kube-state-metrics:
#     image:
#       tag: "v2.8.0"
#   prometheusOperator:
#     image:
#       tag: "v0.63.0"

kube-prometheus-stack:
  enabled: true
  prometheus:
    prometheusSpec:
      additionalScrapeConfigs:
      - job_name: 'kubernetes-endpoints'
        scrape_interval: 30s
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+)(?::\d+);(\d+)
            replacement: $1:$2
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: (.+):(?:\d+);(\d+)
            replacement: ${1}:${2}
            target_label: __address__
  grafana:
    enabled: true
    adminPassword: prom-operator
    ## Configure additional grafana datasources (passed through tpl)
    ## ref: http://docs.grafana.org/administration/provisioning/#datasources
    additionalDataSources:
    - editable: false
      isDefault: false
      name: Jaeger
      access: proxy
      type: jaeger
      uid: webstore-traces
      url: http://sreplayground-platform-jaeger-query.platform.svc:16686
    - name: Loki
      editable: false
      type: loki
      access: proxy
      url: https://{{ printf "%s-loki" .Release.Name }}:3100
      version: 1
      isDefault: false
      jsonData:
        derivedFields:
        - datasourceUid: Jaeger
          matcherRegex: "trace_id=(\\w+)"
          name: TraceID
          url: "$${__value.raw}"

metrics-server:
  enabled: true

opentelemetry-collector:
  enabled: true
  nameOverride: otel-collector-hub
  mode: deployment
  hostNetwork: false
  config:
    exporters:
      logging: {}
      otlp:
        endpoint: 'sreplayground-platform-jaeger-collector.platform.svc.cluster.local:4317'
        tls: 
          insecure: true
    extensions:
      health_check: {}
      memory_ballast: {}
    processors:
      batch: {}
    receivers:
      jaeger:
        protocols:
          grpc:
            endpoint: ${MY_POD_IP}:14250
          thrift_compact:
            endpoint: ${MY_POD_IP}:6831
          thrift_http:
            endpoint: ${MY_POD_IP}:14268
      otlp:
        protocols:
          grpc:
            endpoint: ${MY_POD_IP}:4317
          http:
            endpoint: ${MY_POD_IP}:4318
      prometheus:
        config:
          scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
            - targets:
              - ${MY_POD_IP}:8888
    service:
      extensions:
      - health_check
      - memory_ballast
      pipelines:
        traces:
          exporters:
          - logging
          - otlp
          processors:
          - memory_limiter
          - batch
          receivers:
          - otlp
      telemetry:
        metrics:
          address: ${MY_POD_IP}:8888

jaeger-operator:
  enabled: true