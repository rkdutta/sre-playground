apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: docker-registry
    app.kubernetes.io/name: docker-registry
  name: docker-registry
  namespace: docker-registry
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: docker-registry
      app.kubernetes.io/name: docker-registry
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: docker-registry
        app.kubernetes.io/name: docker-registry
    spec:
      automountServiceAccountToken: false
      containers:
      - 
        env:
        - name: REGISTRY_HTTP_ADDR
          value: 0.0.0.0:5000
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          value: /run/secrets/tls.crt
        - name: REGISTRY_HTTP_TLS_KEY
          value: /run/secrets/tls.key
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: Registry Realm
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: /auth/htpasswd
        - name: REGISTRY_AUTH
          value: htpasswd
        image: registry:2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: docker-registry
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /run/secrets/
          name: docker-registry-server-tls
          readOnly: true
        - mountPath: /storage
          name: storage-volume
        - mountPath: /auth
          name: docker-registry-basic-auth
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - name: docker-registry-server-tls
        secret:
          defaultMode: 420
          secretName: docker-registry-server-tls
      - name: docker-registry-basic-auth
        secret:
          defaultMode: 420
          secretName: docker-registry-basic-auth
      - emptyDir: {}
        name: storage-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: docker-registry
    app.kubernetes.io/name: docker-registry
  name: docker-registry
  namespace: docker-registry
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app.kubernetes.io/instance: docker-registry
    app.kubernetes.io/name: docker-registry
