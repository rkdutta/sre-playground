---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  namespace: {{ default "app" .Values.namespace | quote }}
spec:
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
      annotations:
        #  sidecar.opentelemetry.io/inject: "true"
        #  instrumentation.opentelemetry.io/inject-python: "true"
        #  instrumentation.opentelemetry.io/container-names: "server"
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      # securityContext:
      #   fsGroup: 1000
      #   runAsGroup: 1000
      #   runAsNonRoot: true
      #   runAsUser: 1000
      containers:
        - name: server
          # securityContext:
          #   allowPrivilegeEscalation: false
          #   capabilities:
          #     drop:
          #       - all
          #   privileged: false
          #   readOnlyRootFilesystem: true
          image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.4.1
          ports:
            - containerPort: 8080
          readinessProbe:
            timeoutSeconds: 5
            initialDelaySeconds: 60
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
          livenessProbe:
            timeoutSeconds: 5
            initialDelaySeconds: 60
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
          env:
            - name: PORT
              value: "8080"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalogservice:3550"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
            - name: DISABLE_DEBUGGER
              value: "1"
          resources:
            requests:
              cpu: 100m
              memory: 220Mi
            limits:
              cpu: 200m
              memory: 450Mi
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
  namespace: {{ default "app" .Values.namespace | quote }}
spec:
  type: ClusterIP
  selector:
    app: recommendationservice
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080

